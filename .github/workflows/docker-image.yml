name: Docker Image CI

on:
  push:
    branches: [ "main" ]
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  TAG: 
jobs:
  codacy-security-scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v3

      # Execute Codacy Analysis CLI and generate a SARIF output with the security issues identified during the analysis
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@fde117cc9d692f9e6f9221272c7b65a2f659f064
        with:
          # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository
          # You can also omit the token and run the tools that support default configurations
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          # Adjust severity of non-security issues
          gh-code-scanning-compat: true
          # Force 0 exit code to allow SARIF file generation
          # This will handover control about PR rejection to the GitHub side
          max-allowed-issues: 2147483647

      # Upload the SARIF file generated in the previous step
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif


  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix_p1: ${{ steps.matrix.outputs.value }}
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - id: matrix
        run: |
          echo '::set-output name=value::[{d: "day1", p: "part1"},{d: "day1", p: "part1_event"},{d: "day1", p: "part2_event"},{d: "day1", p: "event"},{d: "day1", p: "reader"},{d: "day2", p: "part1"},{d: "day3", p: "part1"},{d: "day4", p: "part1"},{d: "day5", p: "part1"},{d: "day6", p: "part1"},{d: "day7", p: "part1"},{d: "day8", p: "part1"},{d: "day9", p: "part1"},{d: "day1", p: "part2"},{d: "day2", p: "part2"},{d: "day3", p: "part2"},{d: "day4", p: "part2"},{d: "day5", p: "part2"},{d: "day6", p: "part2"},{d: "day7", p: "part2"},{d: "day8", p: "part2"},{d: "day9", p: "part2"},{d: "day9", p: "reader"},{d: "day10", p: "part1"},{d: "day10", p: "part2"},{d: "day11", p: "part1"},{d: "day11", p: "part2"},{d: "day12", p: "part1"},{d: "day12", p: "part2"},{d: "day13", p: "part1"},{d: "day13", p: "part2"},{d: "day14", p: "part1"},{d: "day14", p: "part2"},{d: "day15", p: "part1"},{d: "day15", p: "part2"},{d: "day16", p: "part1"},{d: "day16", p: "part2"},{d: "day17", p: "part1"},{d: "day17", p: "part2"},{d: "day18", p: "part1"},{d: "day18", p: "part2"},{d: "day19", p: "part1"},{d: "day19", p: "part2"},{d: "day20", p: "part1"},{d: "day20", p: "part2"},{d: "day21", p: "part1"},{d: "day21", p: "part2"},{d: "day22", p: "part1"},{d: "day22", p: "part2"},{d: "day23", p: "part1"},{d: "day23", p: "part2"},{d: "day24", p: "part1"},{d: "day24", p: "part2"},{d: "day25", p: "part1"},{d: "day25", p: "part2"}]'
      - id: tag
        run: |
          echo "::set-output name=tag::$(date +'%s')"
  build_image:
    needs: [ setup ]
    strategy:
      matrix:
        value: ${{fromJson(needs.setup.outputs.matrix_p1)}}
    uses: Rasmus256/advent_of_code_2022/.github/workflows/template.yml@main
    with:
      day: ${{ matrix.value.d }}
      part: ${{ matrix.value.p }}
      tag: "2.1.${{github.run_number}}"
    secrets: inherit
